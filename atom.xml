<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://marsleoguo.github.io</id>
    <title>希言</title>
    <updated>2020-05-12T00:57:36.051Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://marsleoguo.github.io"/>
    <link rel="self" href="https://marsleoguo.github.io/atom.xml"/>
    <subtitle>希言自然。故飘风不终朝，骤雨不终日。孰为此者？天地。</subtitle>
    <logo>https://marsleoguo.github.io/images/avatar.png</logo>
    <icon>https://marsleoguo.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 希言</rights>
    <entry>
        <title type="html"><![CDATA[小巧小马的时间管理]]></title>
        <id>https://marsleoguo.github.io/post/xiao-qiao-xiao-ma-de-shi-jian-guan-li/</id>
        <link href="https://marsleoguo.github.io/post/xiao-qiao-xiao-ma-de-shi-jian-guan-li/">
        </link>
        <updated>2020-05-11T12:09:35.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>时间规划本</li>
<li>制定日计划、周计划、月计划</li>
<li>目标具体化，目标要明确细致。虽然我们管理了时间但是不能细化时间，时间管理最重要的是：你要完事什么事，你把他写下来，完成它。</li>
<li>懂得计划的先后顺序。</li>
<li>千万不要完美主义。计划是有变的我们养成的是习惯，我们要的是完成它而不是放弃它。</li>
</ol>
<hr>
<ol>
<li>一开始制定计划的时候，一定不要排的太慢，要留出空余量，就是说要<code>flexible</code>一点。</li>
<li>对于问题和学习的内容一定要把最本质的内容搞清楚。理解最基本的理论，学会举一反三。</li>
<li>在工作比较轻松或者假期的时候，为了防止自己的松懈，一定要把计划列清楚。</li>
<li>关于碎片时间的管理，在平时不怎么用脑力的东西，利用碎片时间比平时就是很机械的在那背要好的多，而且碎片时间，没事看一眼，没事背一下会加深印象。</li>
<li>平时一定要带手表。keep track of your time（记录自己的时间） 要比较有效率的追踪自己的时间。</li>
<li>一定要注意劳逸结合，要让效率最大化，不要把自己逼得太紧。</li>
<li>一定要注意基础，基础，基础。</li>
<li>要学会调整计划，调整状态。</li>
</ol>
<hr>
<ol>
<li>每周日做周计划，每天早上列日计划。</li>
<li>将不同的科目分散开，每一天只集中注意力处理一个科目。这样大脑就不用花时间去适应不同的事情。如果遇到瓶颈可以交叉处理别的简单的事情来让大脑的内存清除。</li>
<li>一定要根据自己的能力和需求制定计划。一定要给自己流出足够的空余。</li>
<li>休息和学习同等重要。</li>
<li>要心态稳定、情绪稳定。</li>
<li>一定要稳中求胜。</li>
</ol>
<hr>
<ol>
<li>
<p>要给不同的事情根据重要性和紧迫性分级并预估需要的时间，优先处理更重要更紧迫的事情，利用碎片化的时间可以解决轻松且可以快速解决的事情。</p>
</li>
<li>
<p>最好的计划是短期服务中期，中期服务长期。</p>
</li>
<li>
<p>学会分而治之。Divide&amp;Conquer</p>
</li>
<li>
<p>手机丢掉。</p>
</li>
</ol>
<hr>
<ol>
<li>每天抽出一段很短的时间，在固定的时间做固定的事情，<code>key word</code>就是重点词，这里的重点词就是<code>”短时间和固定的时间</code><strong>“重点就是在于坚持”</strong>，半年或者一年下来就会看到质的提升。</li>
</ol>
<blockquote>
<p>短时间、固定、专注、坚持</p>
</blockquote>
<hr>
<ol>
<li>确立目标</li>
<li>分析现状</li>
<li>找到解决办法</li>
<li>高效执行</li>
<li>自己的长处和短处在哪里。</li>
<li>要善于总结，调整。</li>
<li>学会了解自己、认清自己。</li>
<li>不要被周围的人带节奏。</li>
<li>个人成长方面只跟自己对话，我就是我自己的标杆。我自己的梦想就是我自己的梦想没人可以打扰。</li>
</ol>
<hr>
<ol>
<li>从简单到难逐步进入状态，克服忧虑。</li>
<li>GTD工作方法。</li>
<li>番茄工作法。</li>
<li><em>柳比歇夫</em>工作法</li>
<li>规划生命、要事第一、落实到每一天</li>
<li>人生六大领域规划包含：事业、财富、人际关系、家庭生活、学习成长、健康休闲</li>
<li>要定期检查以周为平衡点，每周总结自己的工作，调整进度。</li>
</ol>
<p><strong>轻重缓急ABC</strong></p>
<ol>
<li>
<p>A类. 最关键。占整个计划的70%.</p>
<blockquote>
<p>A类的定义：能够带来最大价值；其次你不去做就没机会了；别人不能替代</p>
</blockquote>
</li>
<li>
<p>B类.  重要且紧急，占整个计划的30%。</p>
</li>
<li>
<p>C类. 0%做不做都行或者延期做。</p>
</li>
<li>
<p>每日管理、要列任务清单、要检查追踪、要日清日新、要拒绝拖延、要条例清晰、要马上行动、要授权交给别人。</p>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[乐理（2）打拍子 附点音符]]></title>
        <id>https://marsleoguo.github.io/post/le-li-2da-pai-zi-fu-dian-yin-le/</id>
        <link href="https://marsleoguo.github.io/post/le-li-2da-pai-zi-fu-dian-yin-le/">
        </link>
        <updated>2020-05-07T11:35:54.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<figure data-type="image" tabindex="1"><img src="/Users/wanghc/Documents/Gridea/tmp/image-20200508204705672.png" alt="image-20200508204705672" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="/Users/wanghc/Documents/Gridea/tmp/image-20200508204731297.png" alt="image-20200508204731297" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="/Users/wanghc/Documents/Gridea/tmp/image-20200508204752453.png" alt="image-20200508204752453" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="/Users/wanghc/Documents/Gridea/tmp/image-20200508204802693.png" alt="image-20200508204802693" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[乐理（1）基础入门]]></title>
        <id>https://marsleoguo.github.io/post/le-li-1ji-chu-ru-men/</id>
        <link href="https://marsleoguo.github.io/post/le-li-1ji-chu-ru-men/">
        </link>
        <updated>2020-05-07T11:30:12.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<figure data-type="image" tabindex="1"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20200507212642.png" alt="image-20200507212624146" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20200508085311.png" alt="image-20200507213542333" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20200508084939.png" alt="image-20200507214517991" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="/Users/wanghc/Documents/Gridea/tmp/image-20200508204931813.png" alt="image-20200508204931813" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="/Users/wanghc/Documents/Gridea/tmp/image-20200508204914208.png" alt="image-20200508204914208" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[NAS] 解决“无法发送邮件”或者“编解码器未成功激活”的方法]]></title>
        <id>https://marsleoguo.github.io/post/nas-jie-jue-wu-fa-fa-song-you-jian-huo-zhe-bian-jie-ma-qi-wei-cheng-gong-ji-huo-de-fang-fa/</id>
        <link href="https://marsleoguo.github.io/post/nas-jie-jue-wu-fa-fa-song-you-jian-huo-zhe-bian-jie-ma-qi-wei-cheng-gong-ji-huo-de-fang-fa/">
        </link>
        <updated>2020-05-05T22:09:55.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<p>遇到这个问题“系统事件/由于指定的编解码器未成功激活，音乐或视频无法正确播放或显示。请检查Internet连接”在论坛中找不到答案，但在百度中找到这个，测试成功，与大家分享</p>
<p>打开你的DSM,作以下修改<br>
控制面板 &gt; 网络，更改DNS为114.114.114.114，并保存<br>
控制面板 &gt; 网络 &gt; 网络界面 &gt; 编辑 &gt; IPv4，关闭“手动设置MTU值”选项，并保存<br>
控制面板 &gt; 网络 &gt; 网络界面 &gt; 编辑 &gt; IPv6，关闭IPv6，并保存<br>
控制面板 &gt; 区域选项，选择“与NTP服务器同步”，服务器地址选择 pool.ntp.org，并保存</p>
<blockquote>
<p>引用：<a href="http://www.gebi1.com/thread-287421-1-1.html">解决“编解码器未成功激活”的方法</a> <img src="http://www.gebi1.com/template/qu_zuk/img/icon/hot_3.gif" alt="" loading="lazy"></p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[数据大屏与数据可视化]]></title>
        <id>https://marsleoguo.github.io/post/shu-ju-da-ping-yu-shu-ju-ke-shi-hua/</id>
        <link href="https://marsleoguo.github.io/post/shu-ju-da-ping-yu-shu-ju-ke-shi-hua/">
        </link>
        <updated>2020-05-03T06:39:35.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<p>数据可视化是目前对数据展示最常用的方式。数据的可视化设计有助于将复杂的数据，用最易理解的方式展示在用户的面前。</p>
<p>数据可视化在中后台的设计中很常见，通常主要用于分析和决策，对实时性要求不高，从一部分功能上讲，其实也有着报告数据的作用。设计以 2D 平面展示为主，几乎不会有 3D 设计出现，视觉设计更注重简单直接，一目了然。</p>
<figure data-type="image" tabindex="1"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/uisdc-sj-20190903-2.jpg" alt="" loading="lazy"></figure>
<p>△ 来源 dribbble 作者wuze</p>
<p>数据大屏在上面的基础上，对实时性要求较高，会更强调数据展示的效果，这也是会流行 FUI 未来主义科幻风格设计的原因，追求视觉上的酷炫效果。设计上 2D、3D 皆有，还可以伴随着动效搭配一些可交互的设计，来展示数据之间联动。</p>
<figure data-type="image" tabindex="2"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/uisdc-sj-20190903-3.jpg" alt="" loading="lazy"></figure>
<p>△ 来源 dribbble 作者William Chen</p>
<p><strong>制作数据大屏的一点小建议</strong></p>
<p>数据大屏的制作可能会包含一些动效交互及3D建模渲染，一般中小型公司通常技术能力有限。如果接到设计制作数据大屏的任务，不妨先和产品技术等一起就表现方式和技术实现等方面做个探讨，不要直接进行设计工作，贸然追求超燃的特效，避免最后因为无法实现导致无谓的返工。</p>
<h4 id="大厂的可视化服务">大厂的可视化服务</h4>
<p><strong>1. 百度 Suger</strong></p>
<p>网站链接：<a href="https://cloud.baidu.com/product/sugar.html">https://cloud.baidu.com/product/sugar.html</a></p>
<p>Sugar 是百度云推出的数据可视化服务平台，目标是解决报表和大屏的数据可视化问题，解放数据可视化系统的开发人力。</p>
<figure data-type="image" tabindex="3"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/uisdc-sj-20190903-4.jpg" alt="" loading="lazy"></figure>
<p>△ 来源Suger官网</p>
<p>上图是官网提供的案例，界面风格是常规的 FUI 风格。</p>
<p>Sugar 提供了组件编辑平台，进入平台后设计师可以直接进行组件的拖拽编辑，打造自己所需要的大屏界面。在设计师完成后就可以直接交接给开发，进行各类数据源的接入。这种形式无疑节约了很多的开发时间，设计师也不用再担心前端开发的效果与自己的差之千里。对于时间紧迫或者自身技术能力不足的项目很适合。</p>
<p>在组件的提供上，Suger 提供了很多的 2D 和 3D 组件，在一定程度上也可以自定义组件。还可以设置数据下钻和图表联动，增强动效交互效果。</p>
<figure data-type="image" tabindex="4"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/uisdc-sj-20190903-5.jpg" alt="" loading="lazy"></figure>
<p>△ 来源Suger编辑平台</p>
<p>平台的编辑界面总体来说还是很方便设计师适应的，与一般的设计软件界面差不多。上方是一些工具，左侧是图层的排布，右侧则是一些组件的属性。设计师可以很快地适应并应用，没有学习成本，也不会有太高的操作难度。但是 Suger 在 3D 方面尚有不足，个人感觉没有阿里云 DataV、腾讯 RayData 的 3D 效果突出。</p>
<p>最后一点，Suger 目前处于推广期，推广期间是免费使用的。</p>
<p><strong>2. 阿里云DataV</strong></p>
<p>网站链接：<a href="https://data.aliyun.com/visual/datav?spm=a2c4g.11174283.2.1.46b66b79vzB03d">https://data.aliyun.com/visual/datav?spm=a2c4g.11174283.2.1.46b66b79vzB03d</a></p>
<p>DataV 最著名的一个应用项目应该就是天猫双11的数据大屏了。每一年都惊艳了无数聚焦于双11活动的人们。2018 年的双11数据大屏设计更是被称为数据经济时代的全球清明上河图。</p>
<p>△2018天猫双11大屏</p>
<p>同样的，DataV 也提供了一个编辑平台，连该平台本身的界面设计也充满了未来科技感，可以根据模板新建，也可以新建空白页面。基本操作模式与 Suger 类似，设计师先建立画面，后开发进行数据源的接入。编辑界面的操作难度也不高，稍微了解一下，就可以快速入手。</p>
<figure data-type="image" tabindex="5"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/uisdc-sj-20190903-6-20200503142833417.jpg" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="6"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/uisdc-sj-20190903-7-20200503142824172.jpg" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="7"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/uisdc-sj-20190903-8-20200503142812468.jpg" alt="" loading="lazy"></figure>
<p>△ DataV平台</p>
<p>与 Suger 相比，个人更为喜欢 DataV。DataV 的设计风格与动效交互都会略好一点。一般企业进行数据大屏的设计项目，其目的更趋向于对外展示。DataV 在效果的酷炫程度上会更符合领导的要求。只是 DataV 目前分为基础版、企业版和专业版收费服务。个人申请有 30 天的基础版试用期。具体选择需要看公司自身内部需求而定。</p>
<p><strong>3. 腾讯RayData</strong></p>
<p>网站链接：<a href="https://cloud.tencent.com/product/raydata">https://cloud.tencent.com/product/raydata</a></p>
<p>RayData 是我跟随我们领导去参观腾讯在宁波的分公司进行了解。当时展示的项目是深圳的城市大脑。将城市管理集为一体，包含交通、医疗、警务等等。与其在官网展示的内容一致，只不过官网是截图，而当时参观时是有个小姐姐拿着 ipad 一边交互一边跟我们讲解。交互与数据联动的效果很好，当时我们领导很喜欢这种效果。</p>
<p>△ 智慧城市大数据可视化</p>
<p>整体来说，RayData 的数据展示效果也是相当不错的。但是 RayData 目前处于内侧阶段，也没有平台提供编辑功能，当前主要的模式是付费定制。</p>
<h4 id="技术开源库">技术开源库</h4>
<p>了解一些技术开源库，一方面可以参照其图表案例，了解各类不同图表的展示方式；另一方面是为了保证自己设计的可实现度，不然再炫酷的设计效果如果因为技术开发能力无法实现也是徒劳的。</p>
<p><strong>1. Echarts -百度开源可视化库</strong></p>
<p>网站链接：<a href="https://echarts.baidu.com/">https://echarts.baidu.com/</a></p>
<p>这是一个使用 JavaScript 实现的开源可视化库，可以流畅地运行在 PC 和移动设备上，兼容当前绝大部分浏览器。4.0 版本还提供了对微信小程序的适配。DataV 中的一些组件也是依赖 Echarts 生成的。</p>
<p>Echarts 提供的图表很多样化，几乎包含常用的、不常用的各类图表样式。且提供有可交互组件，可以对数据进行多维度数据筛取、视图缩放、展示细节等交互操作。</p>
<figure data-type="image" tabindex="8"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/uisdc-sj-20190903-9.jpg" alt="" loading="lazy"></figure>
<p>△ 来源Echarts实例</p>
<p><strong>2. Mapv – 百度地理信息可视化开源库</strong></p>
<p>网站链接：<a href="https://mapv.baidu.com/">https://mapv.baidu.com/</a></p>
<p>用以展示大量地理信息点、线、面的数据。创建需先上传地理信息数据，再设置地图样式后，即可下载保存。目前仅开放 Beta 版本。</p>
<figure data-type="image" tabindex="9"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/uisdc-sj-20190903-10.jpg" alt="" loading="lazy"></figure>
<p>△ 来源Mapv官网</p>
<p><strong>3. 蚂蚁AntV</strong></p>
<p>网站链接：<a href="https://antv.alipay.com/zh-cn/index.html">https://antv.alipay.com/zh-cn/index.html</a></p>
<p>蚂蚁金服的 Ant Design，作为设计师应该都是较为熟悉的。AntV 是蚂蚁 Ant 系列下的一个数据可视化解决方案。分为 G2、G6、F2、L7 不同产品，分别对应不同的特性需求。</p>
<figure data-type="image" tabindex="10"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/uisdc-sj-20190903-11.jpg" alt="" loading="lazy"></figure>
<p>△ 来源AntV官网</p>
<p><strong>4. D3.js – 数据驱动的文档</strong></p>
<p>网站链接：<a href="https://d3js.org/">https://d3js.org/</a></p>
<p>D3js 是一个基于数据来操作文档的 JavaScript  库，适宜用来建造各类可视化图表。支持大型数据集和交互与动画的动态行为。</p>
<figure data-type="image" tabindex="11"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20200503143130.jpg" alt="" loading="lazy"></figure>
<p>△ 来源D3js官网</p>
<p><strong>5. billboard.js – 简易界面的可交互图表库</strong></p>
<p>网站链接：<a href="https://naver.github.io/billboard.js/">https://naver.github.io/billboard.js/</a></p>
<p>这是一个基于 D3 V4+ 的 JavaScript 的图表库。可以对数据进行视图缩放、展示细节等交互操作。</p>
<figure data-type="image" tabindex="12"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20200503143117.jpg" alt="" loading="lazy"></figure>
<p>△ 来源billboard官网</p>
<p><strong>6. FusionCharts</strong></p>
<p>网站链接：<a href="https://www.fusioncharts.com/">https://www.fusioncharts.com/</a></p>
<p>FusionCharts 提供了 100 多个交互式图表和 2000 多个数据驱动的地图，对不同平台都可兼容。同时提供了前端和后端各类框架及代码语言的插件，来方便开发快速入门。不过这款是收费的，根据不同的使用环境定价不同。</p>
<figure data-type="image" tabindex="13"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20200503143144.jpg" alt="" loading="lazy"></figure>
<p>△ 来源FusionCharts官网</p>
<h4 id="设计辅助工具">设计辅助工具</h4>
<p><strong>1. Kitchen – 蚂蚁金服官方插件</strong></p>
<p>网站链接：<a href="http://kitchen.alipay.com/">http://kitchen.alipay.com/</a></p>
<p>这是一个 sketch 的插件工具。主要功能如下图：</p>
<figure data-type="image" tabindex="14"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20200503143227.jpg" alt="" loading="lazy"></figure>
<p>△ 来源Kitchen官网</p>
<p>Iconfont 图标库我比较常用，可以直接在 sketch 中搜索拖拽，不用再去打开网页查找了。其次数据填充也比较常用，自动填充时间、地址、城市等挺方便的。sketch 也有自带的功能，但毕竟自带的填充都是英文，想要中文的需要自己编写填充文档，相对还是比较麻烦。其他是像智能排版、色板等功能，我用的不多，还是以 sketch 自带功能为主。</p>
<p>另外，与可视化设计相关的就是里面的图表生成器了。不过 Kitchen 当前只有一些常规的图表，不过胜在简洁明了，很适合在此基础上进行二次设计。该插件还是蚂蚁 Ant 系列的官方插件，可以自动配置符合 Ant Design 规范的组件，配合公司采用的 Ant 系列的框架，会方便不少。</p>
<figure data-type="image" tabindex="15"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20200503143238.jpg" alt="" loading="lazy"></figure>
<p>△ 来源Kitchen插件界面</p>
<p><strong>2. FusionCool – 阿里Fusion Design开源中后台UI解决方案辅助工具</strong></p>
<p>网站链接：<a href="https://fusion.design/tool">https://fusion.design/tool</a></p>
<p>这也是一个 sketch 的插件工具。分为图标、图表、组件、模块和模板五大功能区。</p>
<p>Fusion Design 作为一个开源中后台解决方案，和 Ant Design 有一定类似，但也有所差别。Ant Design 是一套组件库，Fusion Design 更像是一个组件库生成工厂。</p>
<p>直接下载安装 FusionCool 的话，打开 sketch 看到的将是一个默认组件库，图表部分的种类样式比 Kitchen 多了不少。而更厉害的是，你可以在 Fusion Design 上，基于官方库编辑改造成属于你自己的设计系统，发布主题后获得新的主题包，此时你在 FusionCool 中就可以看到专属于你的主题包了，在sketch中完成设计后，开发使用 Iceworks 安装你的主题库就可以直接编码实现你的设计。</p>
<figure data-type="image" tabindex="16"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20200503143242.jpg" alt="" loading="lazy"></figure>
<p>△ 来源FusionCool插件界面</p>
<p><strong>3. Map Generator – 快速地图生成填充</strong></p>
<p>网站链接：<a href="https://github.com/eddiesigner/sketch-map-generator">https://github.com/eddiesigner/sketch-map-generator</a></p>
<p>这是一款基于谷歌地图的自动填充的 Sketch 插件，输入地址后就可以自动生成不同风格样式的地图，个人比较喜欢第三款灰色的。</p>
<figure data-type="image" tabindex="17"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20200503143251.jpg" alt="" loading="lazy"></figure>
<p>△图为Map Gnerator生成效果</p>
<p><strong>4. Chart – 图表插件</strong></p>
<p>网站链接：<a href="https://github.com/pavelkuligin/chart">https://github.com/pavelkuligin/chart</a></p>
<p>这个插件是收费的，每年10美元。优势在于可以在 Sketch 中创建包含随机、表格或者 JSON 数据的图表。图表样式也是非常丰富了。</p>
<p>参考如下：</p>
<p><a href="https://www.uisdc.com/data-visualization-tool">看似复杂炫酷的数据可视化设计，用这波神器轻松搞定！</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[MAC github加速]]></title>
        <id>https://marsleoguo.github.io/post/MAC github加速/</id>
        <link href="https://marsleoguo.github.io/post/MAC github加速/">
        </link>
        <updated>2020-05-03T02:35:24.000Z</updated>
        <content type="html"><![CDATA[<ol start="2">
<li>
<ol>
<li>登录地址：<a href="https://www.ipaddress.com/">https://www.ipaddress.com/</a></li>
</ol>
</li>
<li>
<p>查询：<code>github.com</code> <code>github.global.ssl.fastly.net</code></p>
</li>
<li>
<p>编辑host文件：</p>
<pre><code class="language-shell">192.30.253.112 github.com
192.30.253.113 github.com
151.101.185.194 github.global.ssl.fastly.net
</code></pre>
</li>
<li>
<p>mac下清理dns缓存的命令</p>
</li>
</ol>
<pre><code class="language-shell">sudo dscacheutil -flushcache
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[centos相关]]></title>
        <id>https://marsleoguo.github.io/post/centos-xiang-guan/</id>
        <link href="https://marsleoguo.github.io/post/centos-xiang-guan/">
        </link>
        <updated>2020-05-03T02:14:15.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<h4 id="查看ip地址">查看<code>ip</code>地址</h4>
<pre><code>ifconfig
</code></pre>
<h4 id="修改centos语言为中文">修改<code>centos</code>语言为中文</h4>
<ul>
<li>第一步: <code>vim /etc/profile</code></li>
<li>第二步：在文件的末尾添加<code>export LANG=zh_CN.GB2312</code></li>
<li>第三步：wq保存。</li>
<li>第四步：刷新<code>profile</code>文件。<code>source /etc/profile</code></li>
</ul>
<h4 id="jdk安装"><code>JDK</code>安装</h4>
<ul>
<li>
<p>第一步：在<code>/usr/local/</code>下创建文件夹<code>soft resource</code>。代码如下：</p>
<pre><code>1.cd /usr/local/ --进入local文件夹下

2.mkdir soft resource --创建文件夹
</code></pre>
</li>
<li>
<p>第二步：通过xftp将<code>JDK</code>安装文件放入到<code>/usr/local/src/soft resource/</code>下</p>
</li>
<li>
<p>第三步：解压<code>JDK</code>gz文件</p>
<pre><code>1.cd /usr/local/src/soft resource/ -- 进入soft resource文件夹
2.tar -zvxf /usr/local/src/jdk-7u71-linux-x64.tar.gz -- 解压jdk的安装文件
</code></pre>
</li>
<li>
<p>第四步：在<code>/usr/</code> 下创建<code>java</code>文件夹</p>
<pre><code>mkdir /usr/java
</code></pre>
</li>
<li>
<p>第五步：剪切<code>jdk</code>解压后的文件到<code>java</code>文件夹下并且命名为<code>java</code></p>
<pre><code>mv jdk1.7.0_71 /usr/java/jdk;
</code></pre>
</li>
<li>
<p>第六步：配置jdk的环境变量</p>
<pre><code>1.vim /etc/profile
2.在文件的末尾添加：
export JAVA_HOME=/usr/java/jdk
export PATH=$JAVA_HOME/bin:$PATH
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
</code></pre>
</li>
</ul>
<blockquote>
<p>注意：不要忘记<code>PATH</code>后边的<code>:$PATH</code>那个代表系统变量的<code>path</code></p>
</blockquote>
<ul>
<li>第七步：让修改生效: 执行<code>source /etc/profile</code></li>
</ul>
<h4 id="mysql安装"><code>MySql</code>安装</h4>
<ul>
<li>
<ol>
<li>
<p>在<code>/usr/local/</code>下创建文件夹<code>soft resource</code>。代码如下：</p>
<pre><code>1.cd /usr/local/ --进入local文件夹下

2.mkdir soft resource --创建文件夹
</code></pre>
</li>
</ol>
</li>
<li>
<ol start="2">
<li>通过xftp将<code>MySql</code>安装文件放入到<code>/usr/local/src/soft resource/</code>下</li>
</ol>
</li>
<li>
<ol start="3">
<li>
<p>解压<code>MySql</code>gz文件</p>
<pre><code>1.cd /usr/local/src/soft resource/ -- 进入soft resource文件夹
2.tar -zvxf mysql-5.6.34-linux-glibc2.5-x86_64.tar.gz -- 解压MySql的安装文件
</code></pre>
</li>
</ol>
</li>
<li>
<ol start="4">
<li>
<p>剪切<code>MySql</code>解压后的文件到<code>mysql</code>文件夹下 并且配置Path路径</p>
<pre><code>1.mv mysql-5.6.34-linux-glibc2.5-x86_64 /usr/local/mysql/
2.vim /etc/profile
3.添加export MYSQL_HOME=/usr/local/mysql
4.path路径添加home路径：export PATH=:$MYSQL_HOME/bin
</code></pre>
</li>
</ol>
</li>
<li>
<ol start="5">
<li>
<p>创建一个新的工作组</p>
<pre><code>groupadd mysql;
</code></pre>
</li>
</ol>
</li>
<li>
<ol start="6">
<li>
<p>创建系统账户并将它指向给新创建的工作组</p>
<pre><code>useradd -r -g mysql mysql;
</code></pre>
</li>
</ol>
</li>
<li>
<ol start="7">
<li>
<p>进入<code>mysql</code>文件夹</p>
<pre><code>cd /usr/local/mysql
</code></pre>
</li>
</ol>
</li>
<li>
<ol start="8">
<li>
<p>修改当前文件夹的属组为<code>mysql</code></p>
<pre><code>chown -R mysql:mysql ./;
</code></pre>
</li>
</ol>
</li>
<li>
<ol start="9">
<li>
<p>执行以下语句：</p>
<pre><code>./scripts/mysql_install_db --user=mysql;
</code></pre>
</li>
</ol>
</li>
<li>
<ol start="10">
<li>修改当前文件夹的属组为<code>root</code></li>
</ol>
<pre><code>chown -R root:root ./;
</code></pre>
</li>
<li>
<ol start="11">
<li>
<p>修改data文件夹的属组为'mysql</p>
<pre><code>chown -R mysql:mysql ./data;
</code></pre>
</li>
</ol>
</li>
<li>
<ol start="12">
<li>将<code>mysql</code>的服务放入到系统服务文件夹<code>（init.d）</code></li>
</ol>
</li>
</ul>
<pre><code>\cp support-files/mysql.server /etc/init.d/mysql;
</code></pre>
<ul>
<li>
<ol start="13">
<li>
<p>启动<code>mysql</code>服务</p>
<pre><code>service mysql start;

</code></pre>
</li>
</ol>
</li>
<li>
<ol start="14">
<li>
<p>修改服务文件夹下 mysql文件的权限</p>
<pre><code>chmod +x /etc/init.d/mysql;
</code></pre>
</li>
</ol>
</li>
<li>
<ol start="15">
<li>创建符号链接</li>
</ol>
</li>
</ul>
<pre><code>\ln -s /usr/local/mysql/bin/mysql /usr/bin;
</code></pre>
<ul>
<li>
<ol start="16">
<li>登录<code>mysql</code>设置<code>root</code>密码</li>
</ol>
</li>
</ul>
<pre><code>1.mysql -h 127.0.0.1 -u root -p
2.回车
3.password提示，然后再回车。
4.设置密码：mysql&gt; set password for root@localhost = password('123');
</code></pre>
<h4 id="tomcat安装"><code>tomcat</code>安装</h4>
<ul>
<li>
<ol>
<li>
<p>在<code>/usr/local/</code>下创建文件夹<code>soft resource</code>。代码如下：</p>
<pre><code>1.cd /usr/local/ --进入local文件夹下

2.mkdir soft resource --创建文件夹
</code></pre>
</li>
</ol>
</li>
<li>
<ol start="2">
<li>通过xftp将<code>MySql</code>安装文件放入到<code>/usr/local/src/soft resource/</code>下</li>
</ol>
</li>
<li>
<ol start="3">
<li>
<p>解压tomcat文件</p>
<pre><code>tar -zvxf /usr/local/src/apache-tomcat-7.0.69.tar.gz;
</code></pre>
</li>
</ol>
</li>
<li>
<ol start="4">
<li>
<p>剪切解压缩后的文件到<code>/user/local/tomcat</code>下</p>
<pre><code>mv /usr/local/src/apache-tomcat-7.0.69 /usr/local/tomcat;
</code></pre>
</li>
</ol>
</li>
<li>
<ol start="5">
<li>
<p>设置<code>tomcat</code>的运行内存等：</p>
<pre><code>1.vim /usr/local/tomcat/bin/catalina.sh
2.在第一行添加:JAVA_OPTS='-Xms512m -Xmx2048m -XX:PermSize=256M -XX:MaxNewSize=512m -XX:MaxPermSize=2048m'
3.chmod +x /usr/local/tomcat/bin/catalina.sh;
</code></pre>
</li>
</ol>
</li>
<li>
<ol start="6">
<li>
<p>设置<code>tomcat</code>的字符集：</p>
<pre><code>1.vim /usr/local/tomcat/conf/server.xml
2.在端口号为&quot; &lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;&quot;处添加：URIEncoding=&quot;utf-8&quot;
</code></pre>
</li>
</ol>
</li>
<li>
<ol start="7">
<li>设置<code>/etc/profile</code>文件</li>
</ol>
</li>
</ul>
<pre><code>1.export CATALINA_HOME=/usr/local/tomcat
2.export PATH=$CATALINA_HOME/bin
3.export CLASSPATH=$CATALINA_HOME/lib/servlet-api.jar
</code></pre>
<h4 id="关闭防火墙">关闭防火墙</h4>
<pre><code>service iptables stop;-- 停止防火墙
chkconfig iptables off;-- 开机启动的时候停止防火墙
</code></pre>
<h4 id="多端口的问题">多端口的问题</h4>
<h4 id="出现command-not-found的解决办法">出现<code>command not found</code>的解决办法。</h4>
<p>执行以下代码：</p>
<pre><code>export
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin
</code></pre>
<h4 id="创建一个新的工作组-_groupadd">创建一个新的工作组 _<code>groupadd</code></h4>
<pre><code>groupadd mysql;
</code></pre>
<h4 id="创建一个新的系统用户_useradd">创建一个新的系统用户_<code>useradd</code></h4>
<pre><code>useradd -r -g mysql mysql;

</code></pre>
<p><code>-r</code>:建立系统帐号；</p>
<p><code>-g&lt;群组&gt;</code>：指定用户所属的群组；</p>
<h4 id="chown用法">chown用法</h4>
<p><strong>用途：</strong> 用来更改某个目录或文件的用户名和用户组的</p>
<p><strong>用法：</strong> <code>chown 用户名:组名 文件路径</code>（可以是就对路径也可以是相对路径）</p>
<p><strong>例如：</strong></p>
<pre><code>chown root:root /tmp/tmp1
</code></pre>
<blockquote>
<p>就是把tmp下的tmp1的用户名和用户组改成root和root（只修改了tmp1的属组）.</p>
</blockquote>
<h4 id="centos-定时任务">centos 定时任务</h4>
<table>
<thead>
<tr>
<th>语法</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>service crond start</code></td>
<td>启动服务</td>
</tr>
<tr>
<td><code>service crond stop</code></td>
<td>关闭服务</td>
</tr>
<tr>
<td><code>service crond restart</code></td>
<td>重启服务</td>
</tr>
<tr>
<td><code>service crond reload</code></td>
<td>重新载入配置</td>
</tr>
<tr>
<td><code>crontab -l</code></td>
<td>查看定时任务</td>
</tr>
<tr>
<td><code>crontab -e</code></td>
<td>编辑定时任务</td>
</tr>
</tbody>
</table>
<p><strong>例子：</strong></p>
<pre><code class="language-shell">56 22 3 jul * rm -rf /root/test
</code></pre>
<h5 id="cron文件语法">cron文件语法:</h5>
<table>
<thead>
<tr>
<th>分</th>
<th>小时</th>
<th>日</th>
<th>月</th>
<th>星期</th>
<th>命令</th>
</tr>
</thead>
<tbody>
<tr>
<td>0-59</td>
<td>0-23</td>
<td>1-31</td>
<td>1-12</td>
<td>0-6</td>
<td>sh脚本</td>
</tr>
</tbody>
</table>
<h5 id="特殊字符">特殊字符</h5>
<ul>
<li><code>*</code>代表取值范围内的数字</li>
<li><code>/</code>代表”每”</li>
<li><code>-</code>代表从某个数字到某个数字</li>
<li><code>,</code>分开几个离散的数字</li>
</ul>
<p>例如： <code>*/15 * * * * sh /root/test1.sh</code>             指定每天的 5:30 执行ls命令</p>
<h4 id="目录的绑定与解除绑定">目录的绑定与解除绑定</h4>
<p><strong>绑定：</strong></p>
<pre><code>mount --bind 老目录  新目录
</code></pre>
<p>解除绑定：</p>
<pre><code>mount --move 老目录 新目录
</code></pre>
<blockquote>
<p>解绑是绑定的一个反过程所以要调过来。</p>
</blockquote>
<h4 id="设置目录永久关联">设置目录永久关联</h4>
<pre><code>sed -i &quot;/proc/a\\\n/home/mnt/resource    /usr/local/tomcat/webapps/core/resource   none   rw,bind  0 0&quot; /etc/fstab;
</code></pre>
<h4 id="设置开机启动">设置开机启动</h4>
<pre><code>vim /etc/rc.d/rc.local
</code></pre>
<blockquote>
<p>想要启动什么在这个文件里添加就行。</p>
</blockquote>
<h4 id="ftp的安装">ftp的安装</h4>
<h5 id="安装">安装</h5>
<h5 id="配置自启动">配置自启动</h5>
<h5 id="查看管理ftp服务">查看管理ftp服务</h5>
<h5 id="修改配置文件">修改配置文件</h5>
<h5 id="常见错误处理">常见错误处理</h5>
<h4 id="mysql账户授权为可远程访问用户">mysql账户授权为可远程访问用户</h4>
<ol>
<li>使用命令行登陆<code>mysql</code>:</li>
</ol>
<pre><code>mysql -uroot -p'123456'
</code></pre>
<ol start="2">
<li>选择<code>mysql</code>数据库实例。</li>
</ol>
<pre><code>use mysql;
</code></pre>
<ol start="3">
<li>给<code>root</code>用户授权可远程访问权限。</li>
</ol>
<pre><code>GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '123456' WITH GRANT OPTION;
</code></pre>
<ol start="4">
<li>刷新权限。</li>
</ol>
<pre><code>FLUSH PRIVILEGES;
</code></pre>
<ol start="5">
<li>利用数据库DBMS尝试一下是否成功。</li>
<li>退出数据库。</li>
</ol>
<pre><code>quit;
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[色彩搭配速成！3个实用方法帮你全面搞定配色]]></title>
        <id>https://marsleoguo.github.io/post/色彩搭配速成！3个实用方法帮你全面搞定配色/</id>
        <link href="https://marsleoguo.github.io/post/色彩搭配速成！3个实用方法帮你全面搞定配色/">
        </link>
        <updated>2019-04-15T03:29:00.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<p>编者按：最值得收藏的色彩设计方法！色彩搭配是一门花样繁多的学问，但任天下奇招再多，独孤九剑总有破法，今天阿里的同学这篇色彩设计方法，仅有简单3大类，但囊括了众多顶尖的配色技巧，不可多得的集大成篇，别错过咯。</p>
<p>为什么要整理设计色彩方法？</p>
<p>在色彩设计应用中，我们对颜色不同程度的理解，影响到设计页面的表现，熟练地运用色彩搭配，设计时岂不事半功倍。一张优秀的设计作品，它的色彩搭配必定和谐得体，令人赏心悦目，反思我们在设计过程中，怎样的色彩搭配更容易达到设计目的，又是什么影响了我们的配色思维呢？</p>
<p>以下几点常会影响色彩搭配思维：</p>
<ol>
<li>
<p>仅关注色彩表象</p>
</li>
<li>
<p>搭配方法不够系统</p>
</li>
<li>
<p>色彩与构成掌握不到位</p>
</li>
</ol>
<p>首先，我们简单理解一下色相和色调概念：</p>
<figure data-type="image" tabindex="1"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415112953.png" alt="" loading="lazy"></figure>
<!-- more -->
<p>接下来我们按三个大类的配色方法，结合一些案例，分析色彩在页面中的应用手法。</p>
<figure data-type="image" tabindex="2"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415113025.png" alt="" loading="lazy"></figure>
<h4 id="一-色相差而形成的配色方式"><strong>一、色相差而形成的配色方式</strong></h4>
<h5 id="11-有主导色彩配色"><strong>1.1 有主导色彩配色</strong></h5>
<p>这是由一种色相构成的统一性配色。即由某一种色相支配、统一画面的配色，如果不是同一种色相，色环上相邻的类似色也可以形成相近的配色效果。当然，也有一些色相差距较大的做法，比如撞色的对比，或者有无色彩的对比，但这里先讲述带主导色的配色案例。</p>
<p>根据主色与辅色之间的色相差不同，可以分为以下各种类型：</p>
<p>1.1-1  同色系主导</p>
<p>1.1-2  邻近色主导</p>
<p>1.1-3  类似色主导</p>
<p>1.1-4  中差色主导</p>
<p>1.1-5  对比色主导</p>
<p>1.1-6  中性色主导</p>
<p>1.1-7  多色搭配下的主导</p>
<p>…</p>
<h6 id="11-1-同色系配色"><strong>1.1-1 同色系配色</strong></h6>
<p>同色系配色是指主色和辅色都在统一色相上，这种配色方法往往会给人页面很一致化的感受。</p>
<figure data-type="image" tabindex="3"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415113130.png" alt="" loading="lazy"></figure>
<p>twitter的案例</p>
<figure data-type="image" tabindex="4"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415113156.png" alt="" loading="lazy"></figure>
<p>整体蓝色设计带来统一印象，颜色的深浅分别承载不同类型的内容信息，比如信息内容模块，白色底代表用户内容，浅蓝色底代表回复内容，更深一点的蓝色底代表可回复操作，颜色主导着信息层次，也保持了twitter的品牌形象。</p>
<p>观点：颜色差分割页面层次和模块，并代表不同功能任务属性。</p>
<p>多有范儿的色带，想自己来一个吗？看教程！<a href="http://www.uisdc.com/use-picture-create-swatches">《配色弱有救了！教你利用图片创建独有的色彩方案！》</a></p>
<h6 id="11-2-邻近色配色"><strong>1.1-2 邻近色配色</strong></h6>
<p>近邻色配色方法比较常见，搭配比同色系稍微丰富，色相柔和过渡看起来也很和谐。</p>
<figure data-type="image" tabindex="5"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415113251.png" alt="" loading="lazy"></figure>
<p>ALIDP的案例</p>
<figure data-type="image" tabindex="6"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415113353.png" alt="" loading="lazy"></figure>
<p>纯度高的色彩，基本用于组控件和文本标题颜色，各控件采用邻近色使页面不那么单调，再把色彩饱和度降低用于不同背景色和模块划分。</p>
<p>观点：基于品牌色的邻近色运用，灵活运用到各类控件中。</p>
<h6 id="11-3-类似色配色"><strong>1.1-3 类似色配色</strong></h6>
<p>类似色配色也是常用的配色方法，对比不强给人色感平静、调和的感觉。</p>
<figure data-type="image" tabindex="7"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415113425.png" alt="" loading="lazy"></figure>
<p>BENMAPT的案例</p>
<figure data-type="image" tabindex="8"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415113506.png" alt="" loading="lazy"></figure>
<p>红黄双色主导页面，色彩基本用于不同组控件表现，红色用于导航控件、按钮和图标，同时也作辅助元素的主色。利用偏橙的黄色代替品牌色，用于内容标签和背景搭配。</p>
<p>观点：基于品牌色的类似色运用，有主次地用到页面各类控件和主体内容中。</p>
<p>想用红色玩出花样？来看顶尖设计师的杰作！<a href="http://www.uisdc.com/red-color-website-design">《洒一腔热血！35个热烈奔放的红色色调网站设计》</a></p>
<h6 id="11-4-中差色配色"><strong>1.1-4 中差色配色</strong></h6>
<p>中差色对比相对突出，色彩对比明快，容易呈现饱和度高的色彩。</p>
<figure data-type="image" tabindex="9"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415113520.png" alt="" loading="lazy"></figure>
<p>facebook的案例</p>
<figure data-type="image" tabindex="10"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415113614.png" alt="" loading="lazy"></figure>
<p>颜色深浅营造空间感，也辅助了内容模块层次之分，统一的深蓝色系运用，传播品牌形象。中间色绿色按钮起到丰富页面色彩的作用，同时也突出绿色按钮任务层级为最高。深蓝色吊顶导航打通整站路径，并有引导用户向下阅读之意。</p>
<p>观点：利用色彩对比突出按钮任务优先级，增加页面气氛。</p>
<h6 id="11-5-对比色配色"><strong>1.1-5 对比色配色</strong></h6>
<p>主导的对比配色需要精准地控制色彩搭配和面积，其中主导色会带动页面气氛，产生激烈的心理感受。</p>
<figure data-type="image" tabindex="11"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415113744.png" alt="" loading="lazy"></figure>
<p>YouTube的案例</p>
<figure data-type="image" tabindex="12"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415113809.png" alt="" loading="lazy"></figure>
<p>红色的热闹体现内容的丰富多彩，品牌红色赋予组控件色彩和可操作任务，贯穿整个站点的可操作提示，又能体现品牌形象。红色多代表导航指引和类目分类，蓝色代表登录按钮、默认用户头像和标题，展示用户所产生的内容信息。</p>
<p>观点：红蓝色反应不同交互和信息的可操作性，针对系统操作和用户操作的区分。</p>
<h6 id="11-6-中性色配色"><strong>1.1-6 中性色配色</strong></h6>
<p>用一些中性的色彩作为基调搭配，常应用在信息量大的网站，突出内容，不会受不必要的色彩干扰。这种过配色比较通用，非常经典。</p>
<figure data-type="image" tabindex="13"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415113859.png" alt="" loading="lazy"></figure>
<p>Bechan的案例</p>
<figure data-type="image" tabindex="14"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415113934.png" alt="" loading="lazy"></figure>
<p>黑色突出网站导航和内容模块的区分，品牌蓝色主要用于可点击的操作控件，包括用户名称、内容标题。相较于大片使用品牌色的手法，更能突出内容和信息，适合以内容为王的通用化、平台类站点。</p>
<p>观点：利用大面积中性色作为主导色，品牌色在这里起到画龙点睛的作用，用于一些需要重点突出的场景，强调交互的状态等。</p>
<h6 id="11-7-多色搭配下的主导"><strong>1.1-7 多色搭配下的主导</strong></h6>
<p>主色和其他搭配色之间的关系会更丰富，可能有类似色、中差色、对比色等搭配方式，但其中某种色彩会占主导。</p>
<figure data-type="image" tabindex="15"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415113947.png" alt="" loading="lazy"></figure>
<p>Google的案例</p>
<figure data-type="image" tabindex="16"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415114048.png" alt="" loading="lazy"></figure>
<p>对于具有丰富产品线的谷歌来说，通过4种品牌色按照一定的纯度比，再用无色彩黑白灰能搭配出千变万化的配色方案，让品牌极具统一感。在大部分页面，蓝色会充当主导色，其他3色作辅色并设定不同的任务属性，黑白灰多作为辅助色，对于平台类站点来说，多色主导有非常好的延展性。</p>
<p>观点：谷歌设置了四种品牌色，通过主次、合理的比例应用在界面中，并通过组控件不同的交互状态合理分配功能任务。</p>
<p>谷歌的经典色彩搭配，一直延续到各类产品中，比如这家：<a href="http://www.uisdc.com/google-designer-squared-redesign">《能过稿的LOGO！谷歌设计师如何为Squared做品牌重设计》</a></p>
<h4 id="二-色调调和而形成的配色方式"><strong>二、色调调和而形成的配色方式</strong></h4>
<h5 id="21-有主导色调配色"><strong>2.1 有主导色调配色</strong></h5>
<p>这是由同一色调构成的统一性配色。深色调和暗色调等类似色调搭配也可以形成同样的配色效果。即使出现多种色相，只要保持色调一致，画面也能呈现整体统一性。</p>
<p>根据色彩的情感，不同的调子会给人不同的感受：</p>
<p>2.1-1  清澈的色调</p>
<p>2.1-2  阴暗的色调</p>
<p>2.1-3  明亮色调</p>
<p>2.1-4  深暗色调</p>
<p>2.1-5  雅白色调</p>
<p>…</p>
<h6 id="21-1-清澈色调"><strong>2.1-1 清澈色调</strong></h6>
<figure data-type="image" tabindex="17"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415114135.png" alt="" loading="lazy"></figure>
<p>SHOTFOLIO的案例</p>
<figure data-type="image" tabindex="18"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415132110.png" alt="" loading="lazy"></figure>
<p>清澈调子使页面非常和谐，即使是不同色相形同色调的配色能让页面保持较高的协调度。蓝色另页面产生安静冰冷的气氛，茶色让我们想起大地泥土的厚实，给页面增加了稳定踏实感觉，同时暖和蓝色的冰冷。</p>
<p>观点：互补的色相搭配在一起，通过统一色调的手法，可以缓和色彩之间的对比效果。</p>
<h6 id="21-2-阴暗色调"><strong>2.1-2 阴暗色调</strong></h6>
<figure data-type="image" tabindex="19"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415132132.png" alt="" loading="lazy"></figure>
<p>概念应用的案例</p>
<figure data-type="image" tabindex="20"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415132220.png" alt="" loading="lazy"></figure>
<p>阴暗的色调渲染场景氛围，通过不同色相的色彩变化丰富信息分类，降低色彩饱和度使各色块协调并融入场景，白色和明亮的青绿色作为信息载体呈现。</p>
<p>Tips：多色彩经过统一色调处理，区域间非常协调，也不影响整体页面阴暗气氛表现。</p>
<h6 id="21-3-明亮色调"><strong>2.1-3 明亮色调</strong></h6>
<figure data-type="image" tabindex="21"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415132232.png" alt="" loading="lazy"></figure>
<p>Kids plus的案例</p>
<figure data-type="image" tabindex="22"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415132308.png" alt="" loading="lazy"></figure>
<p>明亮的颜色活泼清晰，热闹的气氛和醒目的卡通形像叙述着一场庆典，但铺满高纯度的色彩，过于刺激，不适宜长时间游览。</p>
<p>观点：饱和度与纯度特性明显的搭配，在达到视觉冲击力的同时，可适当采用对比色或降低明度等方法调和视觉表现。</p>
<h6 id="21-4-深暗色调"><strong>2.1-4 深暗色调</strong></h6>
<figure data-type="image" tabindex="23"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415132320.png" alt="" loading="lazy"></figure>
<p>LEES FERRY的案例</p>
<figure data-type="image" tabindex="24"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415132347.png" alt="" loading="lazy"></figure>
<p>页面以深暗偏灰色调为主，不同的色彩搭配，像在叙述着不同的故事，白色文字的排版，整个页面显得厚重精致，小区域微渐变增加版面质感。</p>
<p>观点：以低暗色调构成整体画面氛围，小面积明亮部分不会影响整体感觉。</p>
<h6 id="21-5-雅白色调"><strong>2.1-5 雅白色调</strong></h6>
<figure data-type="image" tabindex="25"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415132359.png" alt="" loading="lazy"></figure>
<p>Very的案例</p>
<figure data-type="image" tabindex="26"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415132426.png" alt="" loading="lazy"></figure>
<p>柔和的调子使页面显得明快温暖，就算色彩很多也不会造成视觉负重。页面的同色调搭配，颜色作为不同模块的信息分类，不抢主体的重点，还能衬托不同类型载体的内容信息。</p>
<p>观点：同色调不同色彩的模块，就算承载着不同的信息内容也能表现很和谐。</p>
<h5 id="22-同色调配色"><strong>2.2 同色调配色</strong></h5>
<p>这是由同一或类似色调中的色相变化构成的配色类型，与主导色调配色中的属于同类技法。区别在于色调分布平均，没有过深或过浅的模块，色调范围更为严格。</p>
<figure data-type="image" tabindex="27"><img src="https://image.uisdc.com/wp-content/uploads/2014/12/TB1Y_KoGVXXXXcfXFXXwu0bFXXX.png" alt="img" loading="lazy"></figure>
<p>Tumblr的案例</p>
<figure data-type="image" tabindex="28"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415132503.png" alt="" loading="lazy"></figure>
<p>在实际的设计运用中，常会用些更综合的手法，例如整体有主导色调，小范围布局会采用同色调搭配。拿tumblr的发布模块来说，虽然页面有自己的主色调，但小模块使用同色调不同色彩的功能按钮，结合色相变化和图形表达不同的功能点，众多的按钮放在一起，由于同色调原因模块非常稳定统一。</p>
<p>观点：综合运用的情况，整体界面是有主导色调，在布局例如重点图标等是同色调配色灵活运用。</p>
<h5 id="23-同色深浅搭配"><strong>2.3 同色深浅搭配</strong></h5>
<p>这是由同一色相的色调差构成的配色类型，属于单一色彩配色的一种。 与主导色调配色中的同色系配色属于同类技法。从理论上来讲，在同一色相下的色调不存在色相差异，而是通过不同的色调阶层搭配形成，可以理解为色调配色的一种。</p>
<figure data-type="image" tabindex="29"><img src="https://image.uisdc.com/wp-content/uploads/2014/12/TB1lq5uGVXXXXb_XpXXwu0bFXXX.png" alt="img" loading="lazy"></figure>
<p>Genrecolours的案例</p>
<figure data-type="image" tabindex="30"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415132553.png" alt="" loading="lazy"></figure>
<p>拿紫色界面来说，利用同一色相通过色调深浅对比，营造页面空间层次。虽然色彩深浅搭配合理，但有些难以区分主次，由于是同一色相搭配，颜色的特性决定着心理感受。</p>
<p>观点：同色深浅配色有着极高的统一性，但有点枯燥。</p>
<h4 id="三-对比配色而形成的配色方式"><strong>三、对比配色而形成的配色方式</strong></h4>
<p>由于对比色相互对比构成的配色，可以分为互补色或相反色搭配构成的色相对比效果，由白色、黑色等明度差异构成的明度对比效果，以及由纯度差异构成的纯度对比效果。</p>
<h5 id="31-色相对比">3.1 色相对比</h5>
<p>3.1-1  双色对比</p>
<p>3.1-2 三色对比</p>
<p>3.1-3 多色对比</p>
<p>3.2 纯度对比</p>
<p>3.3 明度对比</p>
<p>….</p>
<h6 id="31-1-双色对比"><strong>3.1-1 双色对比</strong></h6>
<p>色彩间对比视觉冲击强烈，容易吸引用户注意，使用时经常大范围搭配。</p>
<figure data-type="image" tabindex="31"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415132712.png" alt="" loading="lazy"></figure>
<p>VISA的案例</p>
<figure data-type="image" tabindex="32"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415132726.png" alt="" loading="lazy"></figure>
<p>VISA是一个信用卡品牌，深蓝色传达和平安全的品牌形象，黄色能让用户产生兴奋幸福感。另外蓝色降低明度后再和黄色搭配，对比鲜明之余还能缓和视觉疲劳。</p>
<p>观点： 不管是整体对比还是局部对比，对比色给人强烈的视觉冲击，结合色彩心理学对品牌传达效果更佳。</p>
<h6 id="31-2-三色对比"><strong>3.1-2 三色对比</strong></h6>
<p>三色对比色相上更为丰富，通过加强色调重点突出某一种颜色，且在色彩面积更为讲究。</p>
<figure data-type="image" tabindex="33"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415132736.png" alt="" loading="lazy"></figure>
<p>NAVER的案例</p>
<figure data-type="image" tabindex="34"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415132748.png" alt="" loading="lazy"></figure>
<p>大面积绿色作为站点主导航，形象鲜明突出。使用品牌色对应的两种中差色作二级导航，并降低其中一方蓝色系明度，再用同色调的西瓜红作为当前位置状态，二级导航内部对比非常强烈却不影响主导航效果。</p>
<p>观点： 三色对比中西瓜红作为强调色限定在小面积展现非常关键，面积大小直接影响画面平衡感。</p>
<h6 id="31-3-多色对比"><strong>3.1-3 多色对比</strong></h6>
<p>多色对比给人丰富饱满的感觉，色彩搭配协调会使页面会非常精致，模块感强烈。</p>
<figure data-type="image" tabindex="35"><img src="https://image.uisdc.com/wp-content/uploads/2014/12/TB1L5KxGVXXXXbTXXXXwu0bFXXX.png" alt="img" loading="lazy"></figure>
<p>Metro的案例</p>
<figure data-type="image" tabindex="36"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415132817.png" alt="" loading="lazy"></figure>
<p>Metro风格采用大量色彩，分隔不同的信息模块。保持大模块区域面积相等，模块内部可以细分出不同内容层级，单色模块只承载一种信息内容，配上对应功能图标识别性高。</p>
<p>观点：色彩色相对比、色彩面积对比，只要保持一定的比例关系，页面也能整整有序。</p>
<h5 id="32-纯度对比"><strong>3.2 纯度对比</strong></h5>
<p>相对与色相对比，纯度差对比，对比色彩的选择非常多，设计应用范围广泛，可用于一些突出品牌、营销类的场景。</p>
<figure data-type="image" tabindex="37"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415132835.png" alt="" loading="lazy"></figure>
<p>PINTEREST的案例</p>
<figure data-type="image" tabindex="38"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415132848.png" alt="" loading="lazy"></figure>
<p>页面中心登录模块，通过降低纯度处理制造无色相背景，再利用红色按钮的对比，形成纯度差关系。与色相对比相较，纯色对比冲突感刺激感相对小一些，非常容易突出主体内容的真实性。</p>
<p>观点： 运用对比重要的是对比例的把握，面积、构图、节奏、颜色、位置等一切可以发生变化的元素，形成视觉的强烈冲突。</p>
<h5 id="33-明度对比"><strong>3.3 明度对比</strong></h5>
<p>明度对比接近生活实际反映，通过环境远近、日照角度等明暗关系，设计趋于真实。</p>
<figure data-type="image" tabindex="39"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415132901.png" alt="" loading="lazy"></figure>
<p>ARKTIS的案例</p>
<figure data-type="image" tabindex="40"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190415132913.png" alt="" loading="lazy"></figure>
<p>明度对比够构成画面的空间纵深层次，呈现远近的对比关系，高明度突出近景主体内容，低明度表现远景的距离。而明度差使人注意力集中在高亮区域，呈现出药瓶的真实写照。</p>
<p>观点： 明度对比使页面显得更单纯、统一，而高低明度差可产生距离关系。</p>
<h4 id="总结"><strong>总结：</strong></h4>
<p>色彩是最能引起心境共鸣和情绪认知的元素，三原色能调配出非常丰富的色彩，色彩搭配更是千变万化。设计配色时，我们可以摒弃一些传统的默认样式，了解设计背后的需求目的，思考色彩对页面场景表现、情感传达等作用，从而有依据、有条理、有方法地构建色彩搭配方案。</p>
<p><strong>参考：</strong></p>
<p><a href="https://www.uisdc.com/3-color-matching-skills">色彩搭配速成！3个实用方法帮你全面搞定配色</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[spring boot 热部署devtools实现]]></title>
        <id>https://marsleoguo.github.io/post/spring-boot-热部署devtools实现/</id>
        <link href="https://marsleoguo.github.io/post/spring-boot-热部署devtools实现/">
        </link>
        <updated>2019-04-10T01:22:05.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<p><strong>1. devtools</strong></p>
<p>spring为开发者提供了一个名为spring-boot-devtools的模块来使Spring Boot应用支持热部署，提高开发者的开发效率，无需手动重启Spring Boot应用。</p>
<p><strong>2. 项目搭建</strong></p>
<p>本文是采用IDEA搭建的Spring Boot应用，通过spring-boot-devtools配置，可以支持修改java文件会自动重启程序，一些资源无需触发重启，例如thymeleaf模板文件就可以实时编辑。默认情况下，更改/META-INF/maven，/META-INF/resources ，/resources ，/static ，/public 或/templates下的资源不会触发重启，而是触发livereload。devtools模块包含一个嵌入的livereload服务器，可以在资源变化时用来触发浏览器刷新。浏览器需要在livereload.com下载安装扩展。 例如Chrome浏览器在应用商店安装livereload插件后，在要自动刷新的页面点击对应的图标，启动应用后更新页面内容或者css等都会触发页面自动刷新。</p>
<!-- more -->
<p><strong>3. livereload</strong></p>
<p>livereload 通过引入的脚本livereload.js在 livereload 服务和浏览器之间建立了一个 WebSocket 连接。每当监测到文件的变动，livereload 服务就会向浏览器发送一个信号，浏览器收到信号后就刷新页面，实现了实时刷新的效果。每次启动时，需要点击对应的图标，如下图所示。</p>
<figure data-type="image" tabindex="1"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190410092324.png" alt="" loading="lazy"></figure>
<p><strong>4. 项目代码配置</strong></p>
<ol>
<li>pom.xml配置文件</li>
</ol>
<pre><code class="language-xml">&lt;dependency&gt;
   &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
   &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;
   &lt;optional&gt;true&lt;/optional&gt;
&lt;/dependency&gt;
&lt;plugin&gt;
   &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
   &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
   &lt;configuration&gt;
      &lt;fork&gt;true&lt;/fork&gt; &lt;!-- 如果没有该配置，devtools不会生效 --&gt;
   &lt;/configuration&gt;
&lt;/plugin&gt;

</code></pre>
<ol start="2">
<li>yml配置</li>
</ol>
<pre><code class="language-yml">devtools:
  livereload:
    enabled: true #是否支持livereload
    port: 35729
  restart:
    enabled: true #是否支持热部署
    
</code></pre>
<ol start="5">
<li>
<p><strong>IDEA配置</strong></p>
</li>
<li>
<p>File-Settings-Compiler-Build project automatically<br>
<img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190410092511.png" alt="" loading="lazy"></p>
</li>
<li>
<p>ctrl + shift + alt + / MAC快捷键为shift + option + command + / ,选择Registry,勾上 Compiler autoMake allow when app running</p>
</li>
</ol>
<p><strong>6.安装livereload插件</strong><br>
下载livereload插件，将其安装到chrome扩展程序中，并选中允许访问文件网址。</p>
<figure data-type="image" tabindex="2"><img src="https://raw.githubusercontent.com/marsleoguo/bed/master/20190410092728.png" alt="" loading="lazy"></figure>
<p><strong>7.测试</strong></p>
<ol>
<li>修改类 应用会重启</li>
<li>修改配置文件 应用会重启</li>
<li>修改静态文件（html、css等），应用不会重启，但是会调用livereload，浏览器会自动刷新，显示最新的修改内容。</li>
</ol>
<hr>
<p><strong>参考资料：</strong></p>
<p><a href="https://www.cnblogs.com/TechSnail/p/7690829.html">spring boot 热部署devtools实现</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[zsh: command not found: 解决方法]]></title>
        <id>https://marsleoguo.github.io/post/zsh-command-not-found-解决方法/</id>
        <link href="https://marsleoguo.github.io/post/zsh-command-not-found-解决方法/">
        </link>
        <updated>2019-04-09T05:55:08.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>
<p>命令行执行：</p>
<pre><code>open open ~/.zshrc
</code></pre>
</li>
<li>
<p>找到 <code># User configuration</code><br>
加入</p>
<pre><code>source ~/.bash_profile
</code></pre>
</li>
<li>
<p>执行</p>
<pre><code>source .zshrc
</code></pre>
</li>
</ol>
]]></content>
    </entry>
</feed>